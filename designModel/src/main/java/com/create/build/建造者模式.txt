    /**
     * 建造者模式又称为生成器模式，通过将复杂对象的创建过程抽象出来，针对抽象过程的不同实现方法构建出具备不同表现形式或者行为的对象
     * 优点：1.客户端无需知道产品内部的组成细节，将产品本身和产品的创建解耦，使得相同的创建过程可以获得不同的产品对象
     *      2.具体的创建者都相对独立，可以很方便的替换或新增具体的构建者
     *      3.更加精细的控制产品的创建过程。将复杂的产品创建过程分解在不同的方法中，使创建过程更加清晰，也方便程序控制
     *      4.新增具体的创建者无需修改原来的类库，指挥者针对抽象创建者编程，符合开闭原则
     * 不适用：1.产品之间差异性很大，
     *        2.产品内部变化很复杂，导致需要创建很多具体创建者定义使系统变得庞大
     * 与抽象工厂相比：抽象工厂是实现产品家族的创建，不关心产品具体的创建过程，而只什么工厂创建什么产品。建造者模式是按照蓝图
     * 创建指定的产品，主要目的是组装零件生产成一个产品
     *
     * 主要角色：1.抽象创建者角色：创建一个产品对象的各个指定部件接口
     *          2.具体创建者角色：实现各个抽象指定部件接口，装配各个部件
     *          3.产品角色：具体的产品对象
     *          4.指挥者角色：一个使用Builder接口的对象，主要目的是创建一个产品对象。
     *              4.1隔离客户端和与产品的创建过程
     *              4.2负责控制产品对象的生产过程
     */