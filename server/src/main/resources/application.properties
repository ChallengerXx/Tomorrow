server.port=8881
spring.application.name=server
eureka.client.service-url.defaultZone=http://120.79.233.48:8880/eureka/

#告诉服务端，如果我60s之内没有给你发心跳，就代表我“死”了，将我踢出掉。
eureka.instance.lease-expiration-duration-in-seconds=60
#每间隔30s，向服务端发送一次心跳，证明自己依然”存活“
eureka.instance.lease-renewal-interval-in-seconds=30
#表示eureka client间隔多久去拉取服务注册信息，默认为30秒
eureka.client.registry-fetch-interval-seconds=30
#在注册时使用ip地址而不是主机名
eureka.instance.prefer-ip-address=true
#唯一的服务实例ID
eureka.instance.instance-id=${spring.application.name}:${server.port}
#是否需要去检索寻找服务
eureka.client.fetch-registry=true
#是否向服务注册中心注册自己
eureka.client.register-with-eureka=true

#数据源
#spring.datasource.url=jdbc:mysql://rm-bp1485293ipwpg5ohlo.mysql.rds.aliyuncs.com:3306/ssp2?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&autoReconnect=true&useSSL=false
#spring.datasource.username=ssp2
#spring.datasource.password=2WGwnHuxraXYWOV
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
##durid登陆账号密码
#loginUsername=root
#loginPassword=123456
## 下面为连接池的补充设置，应用到上面所有数据源中
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
## 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙,防止sql注入
#spring.datasource.filters=stat,wall,log4j
#spring.datasource.logSlowSql=true
